% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RegimenCreation.R
\name{createRegimens}
\alias{createRegimens}
\title{Identify drug regimen exposures}
\usage{
createRegimens(
  con,
  regimenIngredient,
  cdmDatabaseSchema,
  writeDatabaseSchema = NULL,
  regimenTableName = "regimen"
)
}
\arguments{
\item{con}{A DatabaseConnectorJdbcConnection object}

\item{regimenIngredient}{A dataframe that contains the regimen definitions}

\item{cdmDatabaseSchema}{The schema containing an OMOP CDM in the database}

\item{writeDatabaseSchema}{The name of the schema where the results should be saved in the database. Write access is required. If NULL (default) then result will be written to a temp table.}

\item{regimenTableName}{The name of the results table that will contain the regimens}
}
\value{
Returns NULL. This function is called for its side effect of creating a regimen table in the tempEmulationSchema database
}
\description{
This function will create a new table in an OMOP CDM database that contains drug regimens exposures for each person.
Regimens are defined continuous periods of time where one or more ingredients taken within 30 days of each other.
}
\details{
This algorithm is based largely on OHDSI's drug era logic (https://ohdsi.github.io/CommonDataModel/sqlScripts.html#Drug_Eras).
The major difference is that instead of creating a different era for each ingredient the regimen finder creates eras for combinations
of ingredients and matches them to user specified regimens (i.e. ingredient combinations).

Ingredients that are not part of any regimen are completely ignored by the algorithm.
The first step is to roll up drug exposures to the RxNorm ingredient level.
Then considering only ingredients that are part of at least one regimen in the user's input the algorithm
creates exposure eras with 30 day collapsing logic that ignore ingredient. These eras are continuous periods of exposure to any ingredient in at least one regimen.
Next the algorithm identifies all ingredients exposures that occur within an each exposure era.
If the complete set of ingredients in an era matches the set of ingredients in a regimen definition then we have identified a regimen exposure
and a new record will be created in the final regimen table.

This function should work on any suppported OHDSI database platform.
}
\examples{

library(Eunomia)
# create or derive a dataframe that defines regimens
regimenIngredient <- data.frame(regimen_name = c("Venetoclax and Obinutuzumab", "Venetoclax and Obinutuzumab", "Doxycycline monotherapy"),
                                regimen_id = c(35100084L, 35100084L, 35806103),
                                ingredient_name = c("venetoclax", "obinutuzumab", "Doxycycline"),
                                ingredient_concept_id = c(35604205L, 44507676L, 1738521))

cd <- getEunomiaConnectionDetails()
con <- connect(cd)
createRegimens(con, regimenIngredient, "main", "main", "myregimens")

# download the result from the database
regimens <- dbGetQuery(con, "select * from myregimens")

}
